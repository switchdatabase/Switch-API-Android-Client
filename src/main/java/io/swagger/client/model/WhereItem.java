/**
 * Switch Database REST API
 * Switch API is the primary endpoint of data sevices and Switch DB's platform. You can do adding, editing, deleting or listing data works to your database with query operations by using this low-level API based on HTTP.
 *
 * OpenAPI spec version: 1.2.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

@ApiModel(description = "")
public class WhereItem {
  
  @SerializedName("type")
  private String type = null;
  @SerializedName("column")
  private String column = null;
  @SerializedName("value")
  private String value = null;

  /**
   * You can explain the controls of more than one state with where. The controls of states: equal, notEqual, like, greaterThan, lessThan
   **/
  @ApiModelProperty(value = "You can explain the controls of more than one state with where. The controls of states: equal, notEqual, like, greaterThan, lessThan")
  public String getType() {
    return type;
  }
  public void setType(String type) {
    this.type = type;
  }

  /**
   * Column name
   **/
  @ApiModelProperty(value = "Column name")
  public String getColumn() {
    return column;
  }
  public void setColumn(String column) {
    this.column = column;
  }

  /**
   * Column value
   **/
  @ApiModelProperty(value = "Column value")
  public String getValue() {
    return value;
  }
  public void setValue(String value) {
    this.value = value;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    WhereItem whereItem = (WhereItem) o;
    return (this.type == null ? whereItem.type == null : this.type.equals(whereItem.type)) &&
        (this.column == null ? whereItem.column == null : this.column.equals(whereItem.column)) &&
        (this.value == null ? whereItem.value == null : this.value.equals(whereItem.value));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.type == null ? 0: this.type.hashCode());
    result = 31 * result + (this.column == null ? 0: this.column.hashCode());
    result = 31 * result + (this.value == null ? 0: this.value.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class WhereItem {\n");
    
    sb.append("  type: ").append(type).append("\n");
    sb.append("  column: ").append(column).append("\n");
    sb.append("  value: ").append(value).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
